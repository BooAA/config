(in-package :stumpwm)

(set-prefix-key (kbd "s-x"))
(setf *float-window-modifier* :super)

(define-key *root-map* (kbd "0") "remove-split")
(define-key *root-map* (kbd "1") "only")
(define-key *root-map* (kbd "2") "vsplit")
(define-key *root-map* (kbd "3") "hsplit")
(define-key *root-map* (kbd "o") "fnext")
(define-key *root-map* (kbd "O") "fprev")
(define-key *root-map* (kbd "^") "iresize")
(define-key *root-map* (kbd "x") '*exchange-window-map*)
(define-key *root-map* (kbd "w") "fselect")
(define-key *root-map* (kbd ";") "colon")
(define-key *root-map* (kbd ":") "eval")
(define-key *root-map* (kbd "!") "exec")
(define-key *root-map* (kbd "+") "balance-frames")
(define-key *root-map* (kbd "b") "pull-from-windowlist")
(define-key *root-map* (kbd "s-b") "windowlist")
(define-key *root-map* (kbd "B") "global-pull-windowlist")
(define-key *root-map* (kbd "s-B") "global-windowlist")
(define-key *root-map* (kbd "k") "delete")
(define-key *root-map* (kbd "#") "mark")
(define-key *root-map* (kbd "Left") "prev")
(define-key *root-map* (kbd "Right") "next")

(define-key *root-map* (kbd "s-0") "select-window-by-number 0")
(define-key *root-map* (kbd "s-1") "select-window-by-number 1")
(define-key *root-map* (kbd "s-2") "select-window-by-number 2")
(define-key *root-map* (kbd "s-3") "select-window-by-number 3")
(define-key *root-map* (kbd "s-4") "select-window-by-number 4")
(define-key *root-map* (kbd "s-5") "select-window-by-number 5")
(define-key *root-map* (kbd "s-6") "select-window-by-number 6")
(define-key *root-map* (kbd "s-7") "select-window-by-number 7")
(define-key *root-map* (kbd "s-8") "select-window-by-number 8")
(define-key *root-map* (kbd "s-9") "select-window-by-number 9")

(define-key *root-map* (kbd "s-)") "pull 0")
(define-key *root-map* (kbd "s-!") "pull 1")
(define-key *root-map* (kbd "s-@") "pull 2")
(define-key *root-map* (kbd "s-#") "pull 3")
(define-key *root-map* (kbd "s-$") "pull 4")
(define-key *root-map* (kbd "s-%") "pull 5")
(define-key *root-map* (kbd "s-^") "pull 6")
(define-key *root-map* (kbd "s-&") "pull 7")
(define-key *root-map* (kbd "s-*") "pull 8")
(define-key *root-map* (kbd "s-(") "pull 9")

(define-key *root-map* (kbd "s-c") "quit-confirm")
(define-key *root-map* (kbd "s-l") "exec dm-tool lock")
(define-key *root-map* (kbd "s-z") "exec systemctl suspend")
(define-key *root-map* (kbd "s-q") "meta")

(define-key *exchange-window-map* (kbd "r") "title")

(define-key *root-map* (kbd "t") '*groups-map*)
(define-key *groups-map* (kbd "0") "gkill")
(define-key *groups-map* (kbd "1") "gkill-other")
(define-key *groups-map* (kbd "2") "gnew")
(define-key *groups-map* (kbd "o") "gnext")
(define-key *groups-map* (kbd "O") "gprev")
(define-key *groups-map* (kbd "m") "gnext-with-window")
(define-key *groups-map* (kbd "M") "gprev-with-window")
(define-key *groups-map* (kbd "r") "grename")
(define-key *groups-map* (kbd "RET") "gselect")

(define-key *top-map* (kbd "s-1") "gselect 1")
(define-key *top-map* (kbd "s-2") "gselect 2")
(define-key *top-map* (kbd "s-3") "gselect 3")
(define-key *top-map* (kbd "s-4") "gselect 4")
(define-key *top-map* (kbd "s-5") "gselect 5")
(define-key *top-map* (kbd "s-6") "gselect 6")
(define-key *top-map* (kbd "s-7") "gselect 7")
(define-key *top-map* (kbd "s-8") "gselect 8")
(define-key *top-map* (kbd "s-9") "gselect 9")

(define-key *top-map* (kbd "s-!") "gmove 1")
(define-key *top-map* (kbd "s-@") "gmove 2")
(define-key *top-map* (kbd "s-#") "gmove 3")
(define-key *top-map* (kbd "s-$") "gmove 4")
(define-key *top-map* (kbd "s-%") "gmove 5")
(define-key *top-map* (kbd "s-^") "gmove 6")
(define-key *top-map* (kbd "s-&") "gmove 7")
(define-key *top-map* (kbd "s-*") "gmove 8")
(define-key *top-map* (kbd "s-(") "gmove 9")

(define-key *top-map* (kbd "s-C-1") "gmove-and-follow 1")
(define-key *top-map* (kbd "s-C-2") "gmove-and-follow 2")
(define-key *top-map* (kbd "s-C-3") "gmove-and-follow 3")
(define-key *top-map* (kbd "s-C-4") "gmove-and-follow 4")
(define-key *top-map* (kbd "s-C-5") "gmove-and-follow 5")
(define-key *top-map* (kbd "s-C-6") "gmove-and-follow 6")
(define-key *top-map* (kbd "s-C-7") "gmove-and-follow 7")
(define-key *top-map* (kbd "s-C-8") "gmove-and-follow 8")
(define-key *top-map* (kbd "s-C-9") "gmove-and-follow 9")

(define-key *top-map* (kbd "s-Up") "move-focus up")
(define-key *top-map* (kbd "s-Down") "move-focus down")
(define-key *top-map* (kbd "s-Left") "move-focus left")
(define-key *top-map* (kbd "s-Right") "move-focus right")

(define-key *top-map* (kbd "s-S-Up") "move-window up")
(define-key *top-map* (kbd "s-S-Down") "move-window down")
(define-key *top-map* (kbd "s-S-Left") "move-window left")
(define-key *top-map* (kbd "s-S-Right") "move-window right")

(define-key *top-map* (kbd "s-h") '*help-map*)
(define-key *help-map* (kbd "v") "describe-variable")
(define-key *help-map* (kbd "f") "describe-function")
(define-key *help-map* (kbd "k") "describe-key")
(define-key *help-map* (kbd "b") "where-is")
(define-key *help-map* (kbd "x") "describe-command")
(define-key *help-map* (kbd "e") "lastmsg")
(define-key *help-map* (kbd "E") "copy-last-message")
(define-key *help-map* (kbd "i") "list-window-properties")

(define-key *top-map* (kbd "s-;") "colon")
(define-key *top-map* (kbd "s-s") "exec rofi -show combi")
(define-key *top-map* (kbd "s-:") "eval")
(define-key *top-map* (kbd "s-RET") "exec alacritty")
(define-key *top-map* (kbd "Print") "screenshot-area")
(define-key *top-map* (kbd "s-Print") "screenshot-window")
(define-key *top-map* (kbd "s-Sys_Req") "screenshot")

(define-key *top-map* (kbd "s-w") "exec jumpapp google-chrome")
(define-key *top-map* (kbd "s-t") "exec jumpapp alacritty")
(define-key *top-map* (kbd "s-e") "exec jumpapp emacs")
(define-key *top-map* (kbd "s-f") "exec jumpapp thunar")
(define-key *top-map* (kbd "s-v") "exec jumpapp pavucontrol")
(define-key *top-map* (kbd "s-c") "exec jumpapp telegram-desktop")
(define-key *top-map* (kbd "s-b") "exec jumpapp blueman-manager")

(define-key *top-map* (kbd "s-y") "mode-line")
(define-key *top-map* (kbd "s-d") "fclear")
(define-key *top-map* (kbd "s-g") "lastmsg")
(define-key *top-map* (kbd "s-G") "copy-last-message")
(define-key *top-map* (kbd "s-u") "vsplit")
(define-key *top-map* (kbd "s-i") "hsplit")
(define-key *top-map* (kbd "s-o") "fnext")
(define-key *top-map* (kbd "s-O") "fprev")
(define-key *top-map* (kbd "s-m") "only")
(define-key *top-map* (kbd "s-r") "exec")
(define-key *top-map* (kbd "s-j") "fnext")
(define-key *top-map* (kbd "s-k") "fprev")
(define-key *top-map* (kbd "s-l") "curframe")
(define-key *top-map* (kbd "s-q") "remove-split")
(define-key *top-map* (kbd "s-SPC") "float-this")
(define-key *top-map* (kbd "s-S-SPC") "unfloat-this")
(define-key *top-map* (kbd "s-TAB") "next")
(define-key *top-map* (kbd "s-ISO_Left_Tab") "prev")

(define-key *top-map* (kbd "s-F1") "pamixer-toggle-mute")
(define-key *top-map* (kbd "s-F2") "pamixer-volume-down")
(define-key *top-map* (kbd "s-F3") "pamixer-volume-up")
(define-key *top-map* (kbd "s-F10") "fullscreen")

(define-key *top-map* (kbd "s-S-F1") "pamixer-source-toggle-mute")
(define-key *top-map* (kbd "s-S-F2") "pamixer-source-volume-down")
(define-key *top-map* (kbd "s-S-F3") "pamixer-source-volume-up")
